//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "chain_state")]
pub enum ChainState {
    #[sea_orm(string_value = "Active")]
    Active,
    #[sea_orm(string_value = "Deactive")]
    Deactive,
    #[sea_orm(string_value = "chain_state")]
    ChainState,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "chain_type")]
pub enum ChainType {
    #[sea_orm(string_value = "ExecutionChain")]
    ExecutionChain,
    #[sea_orm(string_value = "SettlementChain")]
    SettlementChain,
    #[sea_orm(string_value = "chain_type")]
    ChainType,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "ticket_type")]
pub enum TicketType {
    #[sea_orm(string_value = "Normal")]
    Normal,
    #[sea_orm(string_value = "Resubmit")]
    Resubmit,
    #[sea_orm(string_value = "ticket_type")]
    TicketType,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "tx_action")]
pub enum TxAction {
    #[sea_orm(string_value = "Redeem")]
    Redeem,
    #[sea_orm(string_value = "Transfer")]
    Transfer,
    #[sea_orm(string_value = "tx_action")]
    TxAction,
}
