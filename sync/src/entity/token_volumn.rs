//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "token_volumn")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub token_id: String,
	pub ticket_len: String,
	pub historical_volumn: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::token_meta::Entity",
		from = "Column::TokenId",
		to = "super::token_meta::Column::TokenId",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	TokenMeta,
}

impl Related<super::token_meta::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::TokenMeta.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
